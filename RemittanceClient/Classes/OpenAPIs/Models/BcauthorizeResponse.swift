//
// BcauthorizeResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BcauthorizeResponse: Codable, JSONEncodable, Hashable {

    /** Authentication request ID as an UUID. */
    public var authReqId: String?
    /** Indicates how long time the client should wait between retries towards the endpoint /oauth2/token. */
    public var interval: Double?
    /** Shows when the authentication request ID expires, in seconds. */
    public var expiresIn: Double?

    public init(authReqId: String? = nil, interval: Double? = nil, expiresIn: Double? = nil) {
        self.authReqId = authReqId
        self.interval = interval
        self.expiresIn = expiresIn
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case authReqId = "auth_req_id"
        case interval
        case expiresIn = "expires_in"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(authReqId, forKey: .authReqId)
        try container.encodeIfPresent(interval, forKey: .interval)
        try container.encodeIfPresent(expiresIn, forKey: .expiresIn)
    }
}


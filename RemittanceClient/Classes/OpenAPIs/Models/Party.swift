//
// Party.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Party identifies a account holder in the wallet platform. Party consists of two parameters, type and partyId. Each type have its own validation of the partyId&lt;br&gt; MSISDN - Mobile Number validated according to ITU-T E.164. Validated with IsMSISDN&lt;br&gt; EMAIL - Validated to be a valid e-mail format. Validated with IsEmail&lt;br&gt; PARTY_CODE - UUID of the party. Validated with IsUuid */
public struct Party: Codable, JSONEncodable, Hashable {

    public enum PartyIdType: String, Codable, CaseIterable {
        case msisdn = "MSISDN"
        case email = "EMAIL"
        case partyCode = "PARTY_CODE"
    }
    public var partyIdType: PartyIdType?
    public var partyId: String?

    public init(partyIdType: PartyIdType? = nil, partyId: String? = nil) {
        self.partyIdType = partyIdType
        self.partyId = partyId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case partyIdType
        case partyId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(partyIdType, forKey: .partyIdType)
        try container.encodeIfPresent(partyId, forKey: .partyId)
    }
}


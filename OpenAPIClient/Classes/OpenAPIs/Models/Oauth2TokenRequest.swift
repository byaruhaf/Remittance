//
// Oauth2TokenRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Oauth2TokenRequest: Codable, JSONEncodable, Hashable {

    /** Value ca be either \"urn:openid:params:grant-type:ciba\" or refresh_token */
    public var grantType: String?
    /** Authentication request ID.Value is only mandatory if grant_type is \"urn:openid:params:grant-type:ciba\" */
    public var authReqId: String?
    /** UUID.Refresh token retrieved from oauth2 token endpoint for consents with grant_type offline. This parameter is only valid if grant_type is refresh_token. */
    public var refreshToken: String?

    public init(grantType: String? = nil, authReqId: String? = nil, refreshToken: String? = nil) {
        self.grantType = grantType
        self.authReqId = authReqId
        self.refreshToken = refreshToken
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case grantType = "grant_type"
        case authReqId = "auth_req_id"
        case refreshToken = "refresh_token"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(grantType, forKey: .grantType)
        try container.encodeIfPresent(authReqId, forKey: .authReqId)
        try container.encodeIfPresent(refreshToken, forKey: .refreshToken)
    }
}

